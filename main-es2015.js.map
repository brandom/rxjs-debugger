{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.constants.ts","./src/app/app.module.ts","./src/app/directives/fake.directive.ts","./src/app/pipes/fake.pipe.ts","./src/app/services/fake.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2F;AAChD;AAEL;AACK;AACE;AAEA;AAEe;AACV;;;;AAO3C,MAAM,YAAY;IAavB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAZ5C,oBAAe,GAAG,8DAAe,CAAC;QAElC,aAAQ,GAAa,IAAI,yDAAQ,EAAE,CAAC;QACpC,kBAAa,GAAkB,IAAI,wEAAa,EAAE,CAAC;QAInD,iBAAY,GAAW,IAAI,CAAC,eAAe,EAAE,CAAC;QAE7B,0BAAqB,GAAkB,IAAI,4CAAO,EAAE,CAAC;QACrD,uBAAkB,GAAG,MAAM,CAAC;IAEG,CAAC;IAEjD;;;;OAIG;IACH,eAAe;QACb,IAAI,CAAC,aAAa,CAChB,gCAAgC;YAChC,MAAM;YACN,iBAAiB;YACjB,8CAA8C;YAC9C,iDAAiD;YACjD,WAAW,CACZ;QAED,0DAAY,CAAC,YAAY;aACtB,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,iCAAiC,CAAC,CAAC,CAAC;QAE1E,0DAAY,CAAC,aAAa;aACvB,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,4BAA4B,SAAS,GAAG,CAAC,CAAC,CAAC;QAExF,0DAAY,CAAC,eAAe;aACzB,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,8BAA8B,SAAS,GAAG,CAAC,CAAC,CAAC;IAC5F,CAAC;IAED,WAAW;QACT,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;QAClC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC;IACxC,CAAC;IAED,sBAAsB;QACpB,kDAAK,CAAC,IAAI,EAAE,IAAI,CAAC;aACd,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;aAC3C,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,eAAe,CAAC,MAAuB;QACrC,QAAO,MAAM,EAAE;YACb,KAAK,8DAAe,CAAC,SAAS;gBAC5B,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBAC9B,MAAM;YACR,KAAK,8DAAe,CAAC,IAAI;gBACvB,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC;gBACvC,MAAM;YACR,KAAK,8DAAe,CAAC,SAAS;gBAC5B,IAAI,CAAC,aAAa,CAAC,sBAAsB,EAAE,CAAC;gBAC5C,MAAM;YACR,KAAK,8DAAe,CAAC,OAAO;gBAC1B,IAAI,CAAC,WAAW,CAAC,sBAAsB,EAAE,CAAC;gBAC1C,MAAM;SACT;IACH,CAAC;IAED,oBAAoB,CAAC,YAAY;QAC/B,0DAAY,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;IAC7C,CAAC;IAED,sBAAsB,CAAC,YAAY;QACjC,0DAAY,CAAC,qBAAqB,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;IAC7C,CAAC;IAED,sBAAsB;QACpB,0DAAY,CAAC,qBAAqB,EAAE,CAAC;IACvC,CAAC;IAED,wBAAwB;QACtB,0DAAY,CAAC,uBAAuB,EAAE,CAAC;IACzC,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,wDAAQ,EAAE,CAAC,SAAS,CAAC,0DAAY,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;IACvF,CAAC;IAED,uBAAuB;QACrB,IAAI,CAAC,aAAa,CAAC,uBAAuB,0DAAY,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC;IACvF,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;QACpC,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;IACzC,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;QAC1C,IAAI,CAAC,aAAa,CAAC,+CAA+C,CAAC,CAAC;IACtE,CAAC;IAEO,eAAe;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;IACzC,CAAC;IAEO,aAAa,CAAC,KAAa;QACjC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS;YAClC,mCAAmC,IAAI,CAAC,kBAAkB,UAAU,KAAK,QAAQ,CAAC;QACpF,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC;YAChC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY;SAC7C,CAAC,CAAC;IACL,CAAC;;wEApHU,YAAY;4FAAZ,YAAY;;;;;;QCjBzB,yEACE;QAAA,yEAEE;QACA,4EAIE;QAHA,oIAAS,kDAA0C,IAAC;QAGpD,kGACF;QAAA,4DAAS;QAET,4EAIE;QAHA,oIAAS,6CAAqC,IAAC;QAG/C,6FACF;QAAA,4DAAS;QAET,4EAIE;QAHA,oIAAS,gDAAwC,IAAC;QAGlD,gGACF;QAAA,4DAAS;QAET,4EAIE;QAHA,oIAAS,kDAA0C,IAAC;QAGpD,kGACF;QAAA,4DAAS;QAGT,6EAIE;QAFA,qIAAS,0CAAkC,IAAC;QAE5C,wDACF;QAAA,4DAAS;QAET,6EAIE;QAFA,qIAAS,4CAAoC,IAAC;QAE9C,wDACF;QAAA,4DAAS;QAET,6EAIE;QAFA,qIAAS,4BAAwB,IAAC;QAElC,4FACF;QAAA,4DAAS;QAET,6EAIE;QAFA,qIAAS,8BAA0B,IAAC;QAEpC,8FACF;QAAA,4DAAS;QAGT,6EAIE;QAFA,qIAAS,2BAAuB,IAAC;QAEjC,mFACF;QAAA,4DAAS;QAET,6EAIE;QAFA,qIAAS,6BAAyB,IAAC;QAEnC,qFACF;QAAA,4DAAS;QAET,6EAIE;QAFA,qIAAS,yBAAqB,IAAC;QAE/B,gGACF;QAAA,4DAAS;QAET,6EAIE;QAFA,qIAAS,kBAAc,IAAC;QAExB,2EACF;QAAA,4DAAS;QACX,4DAAM;QAEN,wEAGO;QACT,4DAAM;;QA1DA,2DACF;QADE,6HACF;QAME,0DACF;QADE,wHACF;;6FD5BS,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;kBAOE,uDAAS;mBAAC,SAAS;;;;;;;;;;;;;;AEvBtB;AAAA;AAAA,IAAY,eAKX;AALD,WAAY,eAAe;IACzB,0CAAuB;IACvB,sCAAmB;IACnB,gCAAa;IACb,0CAAuB;AACzB,CAAC,EALW,eAAe,KAAf,eAAe,QAK1B;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACF;AACe;;AAcrD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAHJ;YACP,uEAAa;SACd;mIAIU,SAAS,mBAVlB,2DAAY;QACZ,yDAAQ;QACR,wEAAa,aAGb,uEAAa;6FAKJ,SAAS;cAZrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,yDAAQ;oBACR,wEAAa;iBACd;gBACD,OAAO,EAAE;oBACP,uEAAa;iBACd;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAA0C;AACJ;AACK;;AAKpC,MAAM,aAAa;IAH1B;QAImB,0BAAqB,GAAkB,IAAI,4CAAO,EAAE,CAAC;KAWvE;IATC,sBAAsB;QACpB,kDAAK,CAAC,IAAI,EAAE,IAAI,CAAC;aACd,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;aAC3C,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;IACpC,CAAC;;0EAXU,aAAa;6FAAb,aAAa;6FAAb,aAAa;cAHzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;aAC/B;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAoD;AACd;AACK;;AAKpC,MAAM,QAAQ;IAHrB;QAKmB,0BAAqB,GAAkB,IAAI,4CAAO,EAAE,CAAC;KAevE;IAbC,SAAS,CAAC,KAAc,EAAE,GAAG,IAAe;QAC1C,OAAO,IAAI,CAAC;IACd,CAAC;IAED,sBAAsB;QACpB,kDAAK,CAAC,IAAI,EAAE,IAAI,CAAC;aACd,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;aAC3C,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;IACpC,CAAC;;gEAhBU,QAAQ;sGAAR,QAAQ;6FAAR,QAAQ;cAHpB,kDAAI;eAAC;gBACJ,IAAI,EAAE,UAAU;aACjB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA2C;AACL;AACK;;AAKpC,MAAM,WAAW;IAHxB;QAImB,0BAAqB,GAAkB,IAAI,4CAAO,EAAE,CAAC;KAWvE;IATC,sBAAsB;QACpB,kDAAK,CAAC,IAAI,EAAE,IAAI,CAAC;aACd,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;aAC3C,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;IACpC,CAAC;;sEAXU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;AACZ;AACX;;;AAElC,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;KAAM;IACL,0DAAY,CAAC,IAAI,CAAC,+CAAU,CAAC,CAAC;CAC/B;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ViewChild, ElementRef, OnDestroy, AfterViewInit } from '@angular/core';\nimport { JsonPipe } from '@angular/common';\n\nimport { timer, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { RxJSDebugger } from 'rxjs-debugger';\n\nimport { FakePipe } from './pipes/fake.pipe';\nimport { FakeService } from './services/fake.service';\nimport { FakeDirective } from './directives/fake.directive';\nimport { AvailableSource } from './app.constants';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit, OnDestroy {\n  AvailableSource = AvailableSource;\n\n  fakePipe: FakePipe = new FakePipe();\n  fakeDirective: FakeDirective = new FakeDirective();\n\n  @ViewChild('console') console: ElementRef;\n\n  randomNumber: number = this.getRandomNumber();\n\n  private readonly subscriptionFinisher$: Subject<void> = new Subject();\n  private readonly consoleEntryPrefix = '>>> ';\n\n  constructor(private fakeService: FakeService) { }\n\n  /**\n   * Adds initial message to console\n   *\n   * @memberof AppComponent\n   */\n  ngAfterViewInit() {\n    this.consoleLogger(\n      '<span style=\"color: green;\">\\n' +\n      '/*\\n' +\n      `Don't forget!\\n` +\n      'You can use <b>window.subscriptionsMap</b>\\n' +\n      `on browser's console to get subscriptions map\\n` +\n      `*/</span>`\n    )\n\n    RxJSDebugger.valueChanges\n      .subscribe(() => this.consoleLogger('Subscription map value changed!'));\n\n    RxJSDebugger.obSubscribed$\n      .subscribe(className => this.consoleLogger(`Observable subscribed on ${className}!`));\n\n    RxJSDebugger.obUnsubscribed$\n      .subscribe(className => this.consoleLogger(`Observable unsubscribed on ${className}!`));\n  }\n\n  ngOnDestroy() {\n    this.subscriptionFinisher$.next();\n    this.subscriptionFinisher$.complete();\n  }\n\n  createFakeSubscription() {\n    timer(1000, 2000)\n      .pipe(takeUntil(this.subscriptionFinisher$))\n      .subscribe();\n  }\n\n  addSubscription(source: AvailableSource) {\n    switch(source) {\n      case AvailableSource.COMPONENT:\n        this.createFakeSubscription();\n        break;\n      case AvailableSource.PIPE:\n        this.fakePipe.createFakeSubscription();\n        break;\n      case AvailableSource.DIRECTIVE:\n        this.fakeDirective.createFakeSubscription();\n        break;\n      case AvailableSource.SERVICE:\n        this.fakeService.createFakeSubscription();\n        break;\n    }\n  }\n\n  addSubscriptionLogic(randomNumber) {\n    RxJSDebugger.addOnSubscribeLogic(() => console.log(randomNumber));\n    this.randomNumber = this.getRandomNumber();\n  }\n\n  addUnsubscriptionLogic(randomNumber) {\n    RxJSDebugger.addOnUnsubscribeLogic(() => console.log(randomNumber));\n    this.randomNumber = this.getRandomNumber();\n  }\n\n  clearSubscriptionLogic() {\n    RxJSDebugger.clearOnSubscribeLogic();\n  }\n\n  clearUnsubscriptionLogic() {\n    RxJSDebugger.clearOnUnsubscribeLogic();\n  }\n\n  printSubscriptionsMap() {\n    this.consoleLogger('\\n' + new JsonPipe().transform(RxJSDebugger.subscriptionsMap()));\n  }\n\n  printSubscriptionsCount() {\n    this.consoleLogger(`Subscription Count: ${RxJSDebugger.openedSubscriptionsCount()}`);\n  }\n\n  cancelSubscriptions() {\n    this.subscriptionFinisher$.next();\n    this.fakePipe.cancelSubscriptions();\n    this.fakeDirective.cancelSubscriptions();\n    this.fakeService.cancelSubscriptions();\n  }\n\n  consoleClear() {\n    this.console.nativeElement.innerHTML = '';\n    this.consoleLogger('Console cleared but subscriptions keep alive!');\n  }\n\n  private getRandomNumber() {\n    return Math.floor(Math.random() * 100);\n  }\n\n  private consoleLogger(entry: string) {\n    this.console.nativeElement.innerHTML +=\n      `<div><span style=\"color: green\">${this.consoleEntryPrefix}</span>${entry}</div>`;\n    this.console.nativeElement.scroll({\n      top: this.console.nativeElement.scrollHeight\n    });\n  }\n}\n","<div class=\"main-container\">\n  <div class=\"btns-actions\">\n\n    <!-- Add timers on fake classes -->\n    <button\n      (click)=\"addSubscription(AvailableSource.COMPONENT)\"\n      class=\"btns-actions__item btns-actions__item--primary\"\n    >\n      Create fake subscription on Component\n    </button>\n\n    <button\n      (click)=\"addSubscription(AvailableSource.PIPE)\"\n      class=\"btns-actions__item btns-actions__item--primary\"\n    >\n      Create fake subscription on Pipe\n    </button>\n\n    <button\n      (click)=\"addSubscription(AvailableSource.SERVICE)\"\n      class=\"btns-actions__item btns-actions__item--primary\"\n    >\n      Create fake subscription on Service\n    </button>\n\n    <button\n      (click)=\"addSubscription(AvailableSource.DIRECTIVE)\"\n      class=\"btns-actions__item btns-actions__item--primary\"\n    >\n      Create fake subscription on Directive\n    </button>\n\n    <!-- Change logic on subscribe and unsubscribe -->\n    <button\n      class=\"btns-actions__item btns-actions__item--other\"\n      (click)=\"addSubscriptionLogic(randomNumber)\"\n    >\n      console.log({{ randomNumber }}) on new subscription\n    </button>\n\n    <button\n      class=\"btns-actions__item btns-actions__item--other\"\n      (click)=\"addUnsubscriptionLogic(randomNumber)\"\n    >\n      console.log({{ randomNumber }}) on unsubscribe\n    </button>\n\n    <button\n      class=\"btns-actions__item btns-actions__item--other\"\n      (click)=\"clearSubscriptionLogic()\"\n    >\n      Clear extra subscription logic\n    </button>\n\n    <button\n      class=\"btns-actions__item btns-actions__item--other\"\n      (click)=\"clearUnsubscriptionLogic()\"\n    >\n      Clear extra unsubscription logic\n    </button>\n\n    <!-- Operations -->\n    <button\n      class=\"btns-actions__item btns-actions__item--secundary\"\n      (click)=\"printSubscriptionsMap()\"\n    >\n      Show subscription map\n    </button>\n\n    <button\n      class=\"btns-actions__item btns-actions__item--secundary\"\n      (click)=\"printSubscriptionsCount()\"\n    >\n      Get subscriptions count\n    </button>\n\n    <button\n      class=\"btns-actions__item btns-actions__item--secundary\"\n      (click)=\"cancelSubscriptions()\"\n    >\n      Cancel newly created subscriptions\n    </button>\n\n    <button\n      class=\"btns-actions__item btns-actions__item--secundary\"\n      (click)=\"consoleClear()\"\n    >\n      Clear Console\n    </button>\n  </div>\n\n  <pre\n    #console\n    class=\"console\"\n  ></pre>\n</div>","export enum AvailableSource {\n  COMPONENT = 'Component',\n  SERVICE = 'Service',\n  PIPE = 'Pipe',\n  DIRECTIVE = 'Directive'\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FakePipe } from './pipes/fake.pipe';\nimport { FakeDirective } from './directives/fake.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FakePipe,\n    FakeDirective\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Directive } from '@angular/core';\nimport { timer, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[appFakeDirective]'\n})\nexport class FakeDirective {\n  private readonly subscriptionFinisher$: Subject<void> = new Subject();\n\n  createFakeSubscription() {\n    timer(1000, 2000)\n      .pipe(takeUntil(this.subscriptionFinisher$))\n      .subscribe();\n  }\n\n  cancelSubscriptions() {\n    this.subscriptionFinisher$.next();\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { timer, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Pipe({\n  name: 'fakePipe'\n})\nexport class FakePipe implements PipeTransform {\n\n  private readonly subscriptionFinisher$: Subject<void> = new Subject();\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return null;\n  }\n\n  createFakeSubscription() {\n    timer(1000, 2000)\n      .pipe(takeUntil(this.subscriptionFinisher$))\n      .subscribe();\n  }\n\n  cancelSubscriptions() {\n    this.subscriptionFinisher$.next();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { timer, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FakeService {\n  private readonly subscriptionFinisher$: Subject<void> = new Subject();\n\n  createFakeSubscription() {\n    timer(1000, 2000)\n      .pipe(takeUntil(this.subscriptionFinisher$))\n      .subscribe();\n  }\n\n  cancelSubscriptions() {\n    this.subscriptionFinisher$.next();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { RxJSDebugger } from 'rxjs-debugger';\nimport { Observable } from 'rxjs';\n\nif (environment.production) {\n  enableProdMode();\n} else {\n  RxJSDebugger.init(Observable);\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}